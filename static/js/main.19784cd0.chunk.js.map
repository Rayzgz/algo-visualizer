{"version":3,"sources":["PathFinding/Node/NodeBox.jsx","PathFinding/Algorithms/dijkstra.jsx","PathFinding/Algorithms/astar.jsx","PathFinding/Grid.jsx","App.js","serviceWorker.js","index.js"],"names":["NodeBox","props","state","this","row","col","start","end","isWall","onMouseDown","onMouseEnter","onMouseUp","node_class","id","className","Component","dijkstra","grid","startNode","endNode","nodeA","nodeB","unvisited","visitedInOrder","i","length","j","push","distance","closestNode","getMinDistance","Infinity","visited","neighbors","getNeighbors","neighbor","Math","abs","predecessor","filter","sort","pop","astar","open","heuristic","cost","getMinCost","g","includes","list","node","Node","animating","inShortestPath","undefined","Grid","shortestPath","mousePressing","path","cur","reverse","constructPath","document","getElementById","setTimeout","resetBoard","Set","animatingNodes","console","log","Promise","resolve","reject","all","animatePath","nodes","setState","newGrid","slice","keepWall","onClick","animateDijkstra","animateAstar","map","row_index","key","handleMouseDown","handleMouseEnter","handleMouseUp","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19784cd0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./NodeBox.css\";\n\nexport class NodeBox extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\trow,\n\t\t\tcol,\n\t\t\tstart,\n\t\t\tend,\n\t\t\tisWall,\n\t\t\tonMouseDown,\n\t\t\tonMouseEnter,\n\t\t\tonMouseUp\n\t\t} = this.props;\n\t\tlet node_class = \"node\";\n\t\tif (start) {\n\t\t\tnode_class += \"-start\";\n\t\t} else if (end) {\n\t\t\tnode_class += \"-end\";\n\t\t} else if (isWall) {\n\t\t\tnode_class += \"-wall\";\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={`node-${row}-${col}`}\n\t\t\t\tclassName={`node ${node_class}`}\n\t\t\t\tonMouseDown={() => onMouseDown(row, col)}\n\t\t\t\tonMouseEnter={() => onMouseEnter(row, col)}\n\t\t\t\tonMouseUp={() => onMouseUp()}\n\t\t\t></div>\n\t\t);\n\t}\n}\n","// returns the shortest path nodes in order\nexport default function dijkstra(grid, startNode, endNode) {\n\tconst unvisited = [];\n\tconst visitedInOrder = [];\n\n\t// initialize distance to infinity\n\tfor (let i = 0; i < grid.length; i++) {\n\t\tfor (let j = 0; j < grid[i].length; j++) {\n\t\t\tunvisited.push(grid[i][j]);\n\t\t}\n\t}\n\n\t// distance to start node is 0\n\tstartNode.distance = 0;\n\n\t// search for path\n\twhile (unvisited.length > 0) {\n\t\t// the closest node from now\n\t\tconst closestNode = getMinDistance(unvisited);\n\n\t\t// closest is a wall\n\t\tif (closestNode.isWall) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// distance is inf, no valid path, return empty array\n\t\tif (closestNode.distance === Infinity) {\n\t\t\treturn visitedInOrder;\n\t\t}\n\n\t\t// mark this node as visited on the grid\n\t\tclosestNode.visited = true;\n\t\tvisitedInOrder.push(closestNode);\n\n\t\t// if this node is end node, the search is fnished, return the path\n\t\tif (\n\t\t\tclosestNode.row === endNode.row &&\n\t\t\tclosestNode.col === endNode.col\n\t\t) {\n\t\t\treturn visitedInOrder;\n\t\t}\n\n\t\t// for all neighbors of the current node\n\t\t// add distance and mark predecessors\n\t\tconst neighbors = getNeighbors(grid, closestNode);\n\n\t\tfor (const neighbor of neighbors) {\n\t\t\tneighbor.distance = closestNode.distance + distance(closestNode, neighbor);\n\t\t\tneighbor.predecessor = grid[closestNode.row][closestNode.col];\n\t\t}\n\t}\n}\n\nexport function getNeighbors(grid, closestNode) {\n\tconst neighbors = [];\n\tconst row = closestNode.row;\n\tconst col = closestNode.col;\n\tif (row > 0) {\n\t\tneighbors.push(grid[row - 1][col]);\n\t}\n\tif (row < grid.length - 1) {\n\t\tneighbors.push(grid[row + 1][col]);\n\t}\n\tif (col > 0) {\n\t\tneighbors.push(grid[row][col - 1]);\n\t}\n\tif (col < grid[0].length - 1) {\n\t\tneighbors.push(grid[row][col + 1]);\n\t}\n\treturn neighbors.filter(neighbor => !neighbor.visited);\n}\n\nexport function getMinDistance(unvisited) {\n\tunvisited.sort((nodeA, nodeB) => nodeB.distance - nodeA.distance);\n\tconst min = unvisited.pop();\n\treturn min;\n}\n\nexport function distance(nodeA, nodeB){\n\treturn Math.abs(nodeA.row - nodeB.row) + Math.abs(nodeA.col - nodeB.col);\n}\n","\nexport default function astar(grid, startNode, endNode) {\n    const open = [];\n    const visitedInOrder = [];\n\n    // NOTE: distance = (distance from start to cur) + (heuristic from cur to end) \n    startNode.distance = 0;\n    startNode.heuristic = heuristic(startNode, endNode);\n    startNode.cost = startNode.heuristic;\n    open.push(startNode);\n\n    while(open.length > 0){\n\n        // the node with lowest cost\n        const closestNode = getMinCost(open);\n\n        // closest is a a wall \n        if(closestNode.isWall) {\n            continue;\n        }\n\n        // distance is inf, no valid path, return empty array\n\t\tif (closestNode.cost === Infinity) {\n            return visitedInOrder;\n\t\t}\n\n\t\t// put this node to closed list\n\t\tclosestNode.visited = true;\n        visitedInOrder.push(closestNode);\n        \n\n        // found end, finish with search\n        if (\n\t\t\tclosestNode.row === endNode.row &&\n\t\t\tclosestNode.col === endNode.col\n\t\t) {\n\t\t\treturn visitedInOrder;\n\t\t}\n\n        // generate successors\n        const neighbors = getNeighbors(grid, closestNode);\n\n\n        // for each successor, determine if they should be on open list\n\t\tfor (const neighbor of neighbors) {\n\t\t\tconst g = closestNode.distance + heuristic(closestNode, neighbor);\n            \n            // not on open list, add it to open list\n            // record f,g,h\n            if (open.includes(neighbor)) {    // on open already\n                if(neighbor.distance <= g){\n                    continue;\n                }\n            }\n\n            neighbor.predecessor = closestNode;\n            neighbor.distance = g;\n            neighbor.heuristic = heuristic(neighbor, endNode);\n            neighbor.cost = g + neighbor.heuristic;\n            open.push(neighbor);\n        }\n        \n\n\n    }\n\n    return visitedInOrder;\n}\n\nfunction getMinCost(list) {\n\tlist.sort((nodeA, nodeB) => nodeB.cost - nodeA.cost);\n\tconst min = list.pop();\n\treturn min;\n}\n\n\nfunction heuristic(node, endNode){\n    return Math.abs(endNode.row - node.row) + Math.abs(endNode.col - node.col);\n}\n\n\nfunction getNeighbors(grid, closestNode) {\n\tconst neighbors = [];\n\tconst row = closestNode.row;\n\tconst col = closestNode.col;\n\tif (row > 0) {\n\t\tneighbors.push(grid[row - 1][col]);\n\t}\n\tif (row < grid.length - 1) {\n\t\tneighbors.push(grid[row + 1][col]);\n\t}\n\tif (col > 0) {\n\t\tneighbors.push(grid[row][col - 1]);\n\t}\n\tif (col < grid[0].length - 1) {\n\t\tneighbors.push(grid[row][col + 1]);\n\t}\n    return neighbors.filter(neighbor => (!neighbor.visited || neighbor.isWall));\n}","import React, { Component } from \"react\";\nimport { NodeBox } from \"./Node/NodeBox\";\nimport dijkstra from \"./Algorithms/dijkstra\";\nimport astar from \"./Algorithms/astar\";\n\nimport \"./Grid.css\";\n\nexport class Node {\n\tconstructor(row, col) {\n\t\tthis.row = row;\n\t\tthis.col = col;\n\t\tthis.start = false;\n\t\tthis.end = false;\n\t\tthis.visited = false;\n\t\tthis.animating = false;\n\t\tthis.inShortestPath = false;\n\t\tthis.isWall = false;\n\t\tthis.predecessor = undefined;\n\t\tthis.distance = Infinity;\n\t\tthis.heuristic = Infinity;\n\t\tthis.cost = Infinity;\n\t}\n}\n\nexport default class Grid extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgrid: [],\n\t\t\tstartNode: {},\n\t\t\tendNode: {},\n\t\t\tshortestPath: [],\n\t\t\tmousePressing: false\n\t\t};\n\t}\n\n\tconstructPath() {\n\t\tconst path = [];\n\t\tlet cur = this.state.endNode;\n\t\twhile (cur.predecessor !== undefined) {\n\t\t\tpath.push(cur);\n\t\t\tcur = cur.predecessor;\n\t\t}\n\t\treturn path.reverse();\n\t}\n\n\tanimatePath() {\n\t\tconst path = this.constructPath();\n\t\tdocument.getElementById(\n\t\t\t`node-${this.state.startNode.row}-${this.state.startNode.col}`\n\t\t).className = \"node node\";\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(\n\t\t\t\t`node-${this.state.startNode.row}-${this.state.startNode.col}`\n\t\t\t).className = \"node node-start\";\n\t\t}, 20);\n\n\t\tfor (let i = 0; i < path.length; i++) {\n\t\t\tconst node = path[i];\n\t\t\tif (\n\t\t\t\t(node.row === this.state.startNode.row &&\n\t\t\t\t\tnode.col === this.state.startNode.col) ||\n\t\t\t\t(node.row === this.state.endNode.row &&\n\t\t\t\t\tnode.col === this.state.endNode.col)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\n\t\t\t\t\t`node-${node.row}-${node.col}`\n\t\t\t\t).className = \"node node-path\";\n\t\t\t}, 20 * i);\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(\n\t\t\t\t`node-${this.state.endNode.row}-${this.state.endNode.col}`\n\t\t\t).className = \"node node\";\n\t\t}, 20 * path.length - 20);\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(\n\t\t\t\t`node-${this.state.endNode.row}-${this.state.endNode.col}`\n\t\t\t).className = \"node node-end\";\n\t\t}, 20 * path.length);\n\t}\n\n\tasync animateDijkstra() {\n\t\tawait this.resetBoard(true);\n\t\tdocument.getElementById(\n\t\t\t`node-${this.state.startNode.row}-${this.state.startNode.col}`\n\t\t).className = \"node node\";\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(\n\t\t\t\t`node-${this.state.startNode.row}-${this.state.startNode.col}`\n\t\t\t).className = \"node node-start\";\n\t\t}, 20);\n\n\t\tconst visitedInOrder = [ ...new Set(dijkstra(\n\t\t\tthis.state.grid,\n\t\t\tthis.state.startNode,\n\t\t\tthis.state.endNode\n\t\t))];\n\t\tconst animatingNodes = [];\n\t\tfor (let i = 0; i < visitedInOrder.length; i++) {\n\t\t\tconst node = visitedInOrder[i];\n\t\t\tif (\n\t\t\t\t(node.row === this.state.startNode.row &&\n\t\t\t\t\tnode.col === this.state.startNode.col) ||\n\t\t\t\t(node.row === this.state.endNode.row &&\n\t\t\t\t\tnode.col === this.state.endNode.col)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(document.getElementById(\n\t\t\t\t`node-${node.row}-${node.col}`\n\t\t\t).className === \"node node-animating\"){\n\t\t\t\tconsole.log('repeat');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tanimatingNodes.push(\n\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdocument.getElementById(\n\t\t\t\t\t\t\t`node-${node.row}-${node.col}`\n\t\t\t\t\t\t).className = \"node node-animating\";\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}, 20 * i);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tawait Promise.all(animatingNodes);\n\t\tdocument.getElementById(\n\t\t\t`node-${this.state.endNode.row}-${this.state.endNode.col}`\n\t\t).className = \"node node\";\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(\n\t\t\t\t`node-${this.state.endNode.row}-${this.state.endNode.col}`\n\t\t\t).className = \"node node-end\";\n\t\t}, 20);\n\t\tthis.animatePath();\n\t}\n\n\tasync animateAstar() {\n\t\tawait this.resetBoard(true);\n\t\tdocument.getElementById(\n\t\t\t`node-${this.state.startNode.row}-${this.state.startNode.col}`\n\t\t).className = \"node node\";\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(\n\t\t\t\t`node-${this.state.startNode.row}-${this.state.startNode.col}`\n\t\t\t).className = \"node node-start\";\n\t\t}, 20);\n\n\t\tconst visitedInOrder = [...new Set(astar(\n\t\t\tthis.state.grid,\n\t\t\tthis.state.startNode,\n\t\t\tthis.state.endNode\n\t\t))];\n\t\tconst animatingNodes = [];\n\t\tfor (let i = 0; i < visitedInOrder.length; i++) {\n\t\t\tconst node = visitedInOrder[i];\n\t\t\tif (\n\t\t\t\t(node.row === this.state.startNode.row &&\n\t\t\t\t\tnode.col === this.state.startNode.col) ||\n\t\t\t\t(node.row === this.state.endNode.row &&\n\t\t\t\t\tnode.col === this.state.endNode.col)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tanimatingNodes.push(\n\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdocument.getElementById(\n\t\t\t\t\t\t\t`node-${node.row}-${node.col}`\n\t\t\t\t\t\t).className = \"node node-animating\";\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}, 20 * i);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tawait Promise.all(animatingNodes);\t\t\n\n\t\tdocument.getElementById(\n\t\t\t`node-${this.state.endNode.row}-${this.state.endNode.col}`\n\t\t).className = \"node node\";\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(\n\t\t\t\t`node-${this.state.endNode.row}-${this.state.endNode.col}`\n\t\t\t).className = \"node node-end\";\n\t\t}, 20);\n\t\t\n\t\tthis.animatePath();\n\n\t}\n\n\tcomponentDidMount() {\n\t\tconst nodes = [];\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tconst row = [];\n\t\t\tfor (let j = 0; j < 50; j++) {\n\t\t\t\tconst node = new Node(i, j);\n\t\t\t\trow.push(node);\n\t\t\t}\n\t\t\tnodes.push(row);\n\t\t}\n\t\tnodes[10][10].start = true;\n\t\tnodes[10][40].end = true;\n\n\t\tthis.setState({\n\t\t\tgrid: nodes,\n\t\t\tstartNode: nodes[10][10],\n\t\t\tendNode: nodes[10][40]\n\t\t});\n\t}\n\n\thandleMouseDown(row, col) {\n\t\tconst newGrid = this.state.grid.slice();\n\t\tnewGrid[row][col].isWall = !newGrid[row][col].isWall;\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tgrid: newGrid,\n\t\t\tmousePressing: true\n\t\t});\n\t}\n\n\thandleMouseEnter(row, col) {\n\t\tif (!this.state.mousePressing) {\n\t\t\treturn;\n\t\t}\n\t\tconst newGrid = this.state.grid.slice();\n\t\tnewGrid[row][col].isWall = !newGrid[row][col].isWall;\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tgrid: newGrid\n\t\t});\n\t}\n\n\thandleMouseUp() {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tmousePressing: false\n\t\t});\n\t}\n\n\tasync resetBoard(keepWall) {\n\t\tconst newGrid = this.state.grid;\n\t\tfor (let row = 0; row < newGrid.length; row++) {\n\t\t\tfor (let col = 0; col < newGrid[0].length; col++) {\n\t\t\t\tif(keepWall){\n\t\t\t\t\tif(newGrid[row][col].isWall){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdocument.getElementById(`node-${row}-${col}`).className =\n\t\t\t\t\t\"node node\";\n\t\t\t\tnewGrid[row][col] = new Node(row, col);\n\t\t\t}\n\t\t}\n\t\tnewGrid[10][10].start = true;\n\t\tnewGrid[10][40].end = true;\n\t\tthis.setState({\n\t\t\tgrid: newGrid,\n\t\t\tstartNode: newGrid[10][10],\n\t\t\tendNode: newGrid[10][40]\n\t\t});\n\t\tdocument.getElementById(\n\t\t\t`node-${this.state.startNode.row}-${this.state.startNode.col}`\n\t\t).className = \"node node-start\";\n\t\tdocument.getElementById(\n\t\t\t`node-${this.state.endNode.row}-${this.state.endNode.col}`\n\t\t).className = \"node node-end\";\n\n\t\treturn 1;\n\t}\n\n\trender() {\n\t\tconst grid = this.state.grid;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\t\t\t\t\n\t\t\t\t\t<button onClick={() => this.animateDijkstra()}>\n\t\t\t\t\tDijkstra's Algorithm\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t<button onClick={() => this.animateAstar()}>\n\t\t\t\t\tA* Algorithm\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={() => this.resetBoard(false)}>Reset</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t{grid.map((row, row_index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={row_index}>\n\t\t\t\t\t\t\t\t{row.map(node => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<NodeBox\n\t\t\t\t\t\t\t\t\t\t\trow={node.row}\n\t\t\t\t\t\t\t\t\t\t\tcol={node.col}\n\t\t\t\t\t\t\t\t\t\t\tstart={node.start}\n\t\t\t\t\t\t\t\t\t\t\tend={node.end}\n\t\t\t\t\t\t\t\t\t\t\tisWall={node.isWall}\n\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(row, col) =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleMouseDown(row, col)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={(row, col) =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleMouseEnter(row, col)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonMouseUp={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleMouseUp()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t></NodeBox>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Grid from './PathFinding/Grid';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <>\n      <div className = \"App App-header\"></div>\n      <div className=\"App\">\n        <Grid></Grid>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}